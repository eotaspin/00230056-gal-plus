openapi: 3.0.1
info:
  title: Provision API
  description: TOP Provision API
  version: 0.0.16
servers:
- url: http://xxxx.aeocp.labs.gvp.telefonica.com/
security:
- APIKeyHeader: []
tags:
- name: Users Provision
  description: Provision of Users -> user info, entitlements, devices
  externalDocs:
    description: TBD
    url: http://TBD/externalDocs.html
- name: User Products Management
  description: Provision of user Products
- name: User Devices Management
  description: Provision of user Devices
paths:
  /instances/{instanceId}/users:
    post:
      tags:
      - Users Provision
      summary: Adds a new user
      operationId: createUser
      parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/instanceId'
      requestBody:
        description: User object to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          $ref: "#/components/responses/200-Response"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "409":
          $ref: "#/components/responses/409-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
      x-codegen-request-body-name: user
  /instances/{instanceId}/users/{uniqueId}:
    parameters:
    - $ref: '#/components/parameters/X-Request-ID'
    - $ref: '#/components/parameters/instanceId'
    - $ref: '#/components/parameters/uniqueId'  
    get:
      tags:
      - Users Provision
      summary: Get User info
      operationId: getUser
      responses:
        "200":
          $ref: "#/components/responses/200-User"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
    put:
      tags:
      - Users Provision
      summary: Updates a user
      operationId: updateUser
      requestBody:
        description: User object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          $ref: "#/components/responses/200-User"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "409":
          $ref: "#/components/responses/409-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
      x-codegen-request-body-name: user
    delete:
      tags:
      - Users Provision
      summary: 'Deletes a user '
      description: 'User/account delete operation will not do a physical removal of
        the user/account in the GVP platform. Instead, the account will be renamed
        and left in a state where the account will be unusable. This status is not
        reversible, that is, user/account cannot be re-activated again. '
      operationId: deleteUser
      responses:
        "204":
          $ref: "#/components/responses/204-Response"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
  /instances/{instanceId}/users/{uniqueId}/move/{action}:
    put:
      tags:
      - Users Provision
      summary: Transfers
      description: change residence
      operationId: moveUser
      parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/instanceId'
      - $ref: '#/components/parameters/uniqueId'  
      - $ref: '#/components/parameters/action'  
      requestBody:
        description: User object to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          $ref: "#/components/responses/200-Response"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
      x-codegen-request-body-name: user
  /instances/{instanceId}/user/{uniqueId}/status/{status}:
    put:
      tags:
      - Users Provision
      summary: Changes User Status (ACTIVE, SUSPENDED)
      description: 'Operation used to halt the service of the user temporary, to resume
        the service or to cancel permanentlya user '
      operationId: updateUserStatus
      parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/instanceId'
      - $ref: '#/components/parameters/uniqueId'  
      - $ref: '#/components/parameters/status'
      requestBody:
        description: User parameters allowed to be updated during status changing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserStatusBody'
        required: false
      responses:
        "200":
          $ref: "#/components/responses/200-Response"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
  /instances/{instanceId}/users/{uniqueId}/products:
    get:
      tags:
      - User Products Management
      summary: Get User Products (Subscriptions, Movies, PPV or Vouchers)
      description: This operation allows to query for Products of the user from OSS/BSS
        systems
      operationId: getUserProducts
      parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/instanceId'
      - $ref: '#/components/parameters/uniqueId'
      - $ref: '#/components/parameters/productType'
      - $ref: '#/components/parameters/productCode'
      - $ref: '#/components/parameters/purchaseId'
      responses:
        "200":
          $ref: "#/components/responses/200-ProductList"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
    put:
      tags:
      - User Products Management
      summary: Adds/removes products to the account (Subscriptions, Movies, PPV or
        Vouchers)
      description: This operation allows to change Products of the user from OSS/BSS
        systems
      operationId: userProductsManagement
      parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/instanceId'
      - $ref: '#/components/parameters/uniqueId'
      requestBody:
        description: User Products to be updated
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/UserProductsUpdate'
      responses:
        "200":
          $ref: "#/components/responses/200-Response"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "409":
          $ref: "#/components/responses/409-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
      x-codegen-request-body-name: products
  /instances/{instanceId}/users/{uniqueId}/devices:
    get:
      tags:
      - User Devices Management
      summary: Get User Devices
      description: This operation allows to query for Devices of the user from OSS/BSS
        systems
      operationId: getUserDevices
      parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/instanceId'
      - $ref: '#/components/parameters/uniqueId'
      responses:
        "200":
          $ref: "#/components/responses/200-DeviceList"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
    put:
      tags:
      - User Devices Management
      summary: Adds/removes devices to the account
      description: This operation allows to change Devices of the user from OSS/BSS
        systems
      operationId: userDevicesManagement
      parameters:
      - $ref: '#/components/parameters/X-Request-ID'
      - $ref: '#/components/parameters/instanceId'
      - $ref: '#/components/parameters/uniqueId'
      requestBody:
        description: User Devices to be created/updated/deleted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicesList'
        required: true
      responses:
        "200":
          $ref: "#/components/responses/200-Response"
        "400":
          $ref: "#/components/responses/400-Response"
        #"401":
        #  $ref: "#/components/responses/401-Response"
        "403":
          $ref: "#/components/responses/403-Response"
        "404":
          $ref: "#/components/responses/404-Response"
        "409":
          $ref: "#/components/responses/409-Response"
        "500":
          $ref: "#/components/responses/500-Response"
        "501":
          $ref: "#/components/responses/501-Response"
        "503":
          $ref: "#/components/responses/503-Response"
        "504":
          $ref: "#/components/responses/504-Response"
      x-codegen-request-body-name: devices
components:
  schemas:
    UserCommon:
      type: object
      properties:
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        platformId:
          type: string
        commercialOffer:
          type: string
          description: RESIDENTIAL, BUSINESS, OTT, ...
        monthlyLimit:
          type: integer
        application:
          type: string
          description: In TdE, Imagenio flavour
        addressing:
          type: string
          description: Type of addressing. In TdE always STATIC_IP
        stbIps:
          type: array
          description: List of IP addresses provisioned to the user
          items:
            type: string
        maxDevices:
          type: integer
        tvHd:
          type: integer
        lineQuality:
          type: integer
        limitVodPurchases:
          type: integer
        limitPPVPurchases:
          type: integer
        limitUserBonusPurchases:
          type: integer
        subscriberLineUpstream:
          type: integer
        subscriberLineDownstream:
          type: integer
        transactionalPurchases:
          type: integer
          description: |
            Flag enabling/disabling transactional purchases for User purchases\:
              * 0 = option is disabled.
              * 1 = option is enabled (default).
            Other values are not expected, and will be forbidden by the server.
          example: 1          
    User:
      type: object
      #required:
      #  - uniqueId
      #  - serviceType
      #  - platformId
      #  - commercialOffer
      properties:
        uniqueId:
          $ref: '#/components/schemas/UniqueId'
        email:
          $ref: '#/components/schemas/Email'
        password:
          $ref: '#/components/schemas/Password'
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        platformId:
          $ref: '#/components/schemas/PlatformId'
        commercialOffer:
          $ref: '#/components/schemas/CommercialOffer'
        monthlyLimit:
          $ref: '#/components/schemas/MonthlyLimit'
        application:
          $ref: '#/components/schemas/Application'
        addressing:
          $ref: '#/components/schemas/Addressing'
        stbIps:
          $ref: '#/components/schemas/StbIps'
        maxDevices:
          $ref: '#/components/schemas/MaxDevices'
        tvHd:
          $ref: '#/components/schemas/TvHd'
        lineQuality:
          $ref: '#/components/schemas/LineQuality'
        limitVodPurchases:
          $ref: '#/components/schemas/LimitVodPurchases'
        limitPPVPurchases:
          $ref: '#/components/schemas/LimitPPVPurchases'
        limitUserBonusPurchases:
          $ref: '#/components/schemas/LimitUserBonusPurchases'
        subscriberLineUpstream:
          $ref: '#/components/schemas/SubscriberLineUpstream'
        subscriberLineDownstream:
          $ref: '#/components/schemas/SubscriberLineDownstream'
        transactionalPurchases:
          $ref: '#/components/schemas/TransactionalPurchases'
        userVideoServiceInfo:
          $ref: '#/components/schemas/UserVideoServiceInfo'
        devicesList:
          $ref: '#/components/schemas/DevicesList'
        products:
          $ref: '#/components/schemas/UserProducts'
    UserStatusBody:
      type: object
      properties:
        userVideoServiceInfo:
          $ref: '#/components/schemas/UserVideoServiceInfo'
        products:
          type: object
          description: Object with the User Products definitions      
          properties:
            productsMode:
              $ref: '#/components/schemas/ProductsMode'
            subscriptionsList:
              type: array
              description: List of Subscriptions.
              items:
                $ref: '#/components/schemas/Subscription'
    UserResponse:
      type: object
      properties:
        uniqueId:
          $ref: '#/components/schemas/UniqueId'
        status:
          $ref: '#/components/schemas/Status'
        userId:
          $ref: '#/components/schemas/UserId'
        email:
          $ref: '#/components/schemas/Email'
        serviceType:
          $ref: '#/components/schemas/ServiceType'
        platformId:
          $ref: '#/components/schemas/PlatformId'
        commercialOffer:
          $ref: '#/components/schemas/CommercialOffer'
        monthlyLimit:
          $ref: '#/components/schemas/MonthlyLimit'
        application:
          $ref: '#/components/schemas/Application'
        addressing:
          $ref: '#/components/schemas/Addressing'
        stbIps:
          $ref: '#/components/schemas/StbIps'
        maxDevices:
          $ref: '#/components/schemas/MaxDevices'
        tvHd:
          $ref: '#/components/schemas/TvHd'
        lineQuality:
          $ref: '#/components/schemas/LineQuality'
        limitVodPurchases:
          $ref: '#/components/schemas/LimitVodPurchases'
        limitPPVPurchases:
          $ref: '#/components/schemas/LimitPPVPurchases'
        limitUserBonusPurchases:
          $ref: '#/components/schemas/LimitUserBonusPurchases'
        subscriberLineUpstream:
          $ref: '#/components/schemas/SubscriberLineUpstream'
        subscriberLineDownstream:
          $ref: '#/components/schemas/SubscriberLineDownstream'
        transactionalPurchases:
          $ref: '#/components/schemas/TransactionalPurchases'
        userVideoServiceInfo:
          $ref: '#/components/schemas/UserVideoServiceInfoResponse'
        devicesList:
          $ref: '#/components/schemas/DevicesListResponse'
        products:
          $ref: '#/components/schemas/UserProductsResponse'
    UserProducts:
      type: object
      description: Object with the User Products definitions      
      properties:
        productsMode:
          $ref: '#/components/schemas/ProductsMode'
        subscriptionsList:
          type: array
          description: List of Subscriptions.
          items:
            $ref: '#/components/schemas/Subscription'
        moviesList:
          type: array
          description: List of Movies.
          items:
            $ref: '#/components/schemas/Movie'
        ppvsList:
          type: array
          description: List of Products.
          items:
            $ref: '#/components/schemas/PPV'
        vouchersList:
          type: array
          description: List of Vouchers.
          items:
            $ref: '#/components/schemas/Product'
    UniqueId:
      type: string
      description: Id assigned to user from OSS/BSS Systems.
      example: 28001301142
    Status:
      type: string
      description: User status
      enum:
      - Unknown
      - Active
      - Awaiting E-mail Confirmation
      - Suspended
      - Excluded
      - TransferOngoing
    UserId:
      type: string
      description: internal Id in GVP platform, generated automatically during
                user creation
    Email:
      type: string
      description: User e-mail.
      example: usermail@mail.com
    Password:
      type: string
      description: User password.
    PlatformId:
      type: string
      description: Platform Identifier.
    CommercialOffer:
      type: string
      description: RESIDENTIAL, BUSINESS, OTT, ...
    MonthlyLimit:
      type: integer
    Application:
      type: string
      description: In TdE, Imagenio flavour
    Addressing:
      type: string
      description: Type of addressing. In TdE always STATIC_IP
    StbIps:
      type: array
      description: List of IP addresses provisioned to the user
      items:
        type: string
    MaxDevices:
      type: integer
    TvHd:
      type: integer
    LineQuality:
      type: integer
    LimitVodPurchases:
      type: integer
    LimitPPVPurchases:
      type: integer
    LimitUserBonusPurchases:
      type: integer
    SubscriberLineUpstream:
      type: integer
    SubscriberLineDownstream:
      type: integer
    TransactionalPurchases:
      type: integer
      description: |
        Flag enabling/disabling transactional purchases for User purchases\:
          * 0 = option is disabled.
          * 1 = option is enabled (default).
        Other values are not expected, and will be forbidden by the server.
      example: 1          
      
    UserProductsUpdate:
      type: object
      allOf: 
        - type: object
          properties:
            serviceType:
              $ref: '#/components/schemas/ServiceType'
        - $ref: '#/components/schemas/UserProducts'
    UserProductsResponse:
      type: object
      description: Object with the User Products Response definition      
      properties:
        subscriptionsList:
          type: array
          description: List of Subscriptions.
          items:
            $ref: '#/components/schemas/ProductGet'
        moviesList:
          type: array
          description: List of Movies.
          items:
            $ref: '#/components/schemas/ProductGet'
        ppvsList:
          type: array
          description: List of PPVs.
          items:
            $ref: '#/components/schemas/ProductGet'
        vouchersList:
          type: array
          description: List of Vouchers.
          items:
            $ref: '#/components/schemas/VoucherGet'
    ProductsMode:
      type: string
      description: Mode to process received ProductList. - If "INCREMENTAL" mode is
        set, only received products in the requeste will be modified, acording with the associated operation (ON, OFF, KEEP, CANCEL)
        - If "SNAPSHOT" mode is set, the received products will be modified with their respective operation, and the products not received in the request, but currently associated in the database, will be removed from the user.
      enum:
      - INCREMENTAL
      - SNAPSHOT
    ProductOperation:
      description: >-
        Operation to be applied to the Product.
        This parameter will be ignored if the productList is operated in 'SNAPSHOT' mode
      type: "string"
      enum:
      - "ON"
      - "OFF"
      - "KEEP"
      - "CANCEL"
    ProductStatus:
      description: >-
        Status of the Product
      type: "string"
      enum:
      - "Active"
      - "Inactive"
      - "PendingConsolidation"
      - "PendingCancellation"
      - "Cancelled"
      - "Expired"
    PendingConsolidation:
      type: integer
      description: 'Just in case of "ON" operation, this flag specifies whether this
        product must be assigned to the user in a CONSOLIDATED (0), or in a NON-consolidated
        (1) state. OPTIONAL parameter. Default value: 1.  '
      default: 1
    ProductBase:
      type: object
      properties:
        productId:
          type: string
          description: Identifier of the Product. Depending on the type of product, can be:\n - Unique identifier of the product in operator\'s BSS/OSS systems (Commercial Code) for Subscriptions and Vouchers\n - Internal Product Id for transactional products (Internal Product Id)
    Product:
      type: object
      allOf: 
        - $ref: '#/components/schemas/ProductBase'
        - type: object
          properties:
            pendingConsolidation:
              $ref: '#/components/schemas/PendingConsolidation'
            operation: 
              $ref : '#/components/schemas/ProductOperation'
    PPV:
      type: object
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
          properties:
            category:
              type: string
              description: 'Category Class associated to the purchase (For charging purposes).
                i.e: SD or HD in PPVs'
    Movie:
      type: object
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
      properties:
        endDate:
          type: integer
          description: End date (timestamp in milliseconds)
          example: 1620229743000
    Subscription:
      type: object
      allOf:
        - $ref: '#/components/schemas/Product'
        - type: object
      properties:
        endDate:
          type: integer
          description: End date (timestamp in milliseconds)
          example: 1620221843000
    ProductGet:
      type: object
      allOf: 
        - $ref: '#/components/schemas/ProductBase'
        - type: object
          properties:
            purchaseId:
              type: integer
              description: |
                Unique identifier of the purchase. This field is specially relevant in the case of vouchers, because a user can purchase the same voucher product more than once.
              example: 1222114                        
            status: 
              $ref: '#/components/schemas/ProductStatus'
            productType:
              $ref: '#/components/schemas/ProductType'
            startDate:
              type: integer
              description: Start date (timestamp in milliseconds)
              example: 1620221915000
            endDate:
              type: integer
              description: End date (timestamp in milliseconds)
              example: 1620221781000
    VoucherGet:
      type: object
      allOf: 
        - $ref: '#/components/schemas/ProductGet'
        - type: object
          properties:
            isUsed:
              type: integer
              enum: 
              - 0
              - 1
              description: |
                Used status of the Voucher
                  0 - Not-Used -> No purchases made with this Voucher.
                  1 - Used     -> At least one purchase made with this Voucher.
              example: 0
    ProductType:
      type: string
      example: "string"
    ServiceType:
      type: string
      enum:
      - IPTV
      - OTT      
    DevicesList:
      type: array
      description: List of devices.
      items:
        $ref: '#/components/schemas/Device'
    DevicesListResponse:
      type: array
      description: List of devices.
      items:
        $ref: '#/components/schemas/DeviceResponse'
    Device:
      type: object
      properties:
        deviceTrustedId:
          type: string
          description: device MAC
        deviceExternalId:
          type: string
          description: device external ID
        deviceTypeId:
          type: integer
          example: 802
        deviceName:
          type: string
        operation:
          type: string
          enum:
          - ON
          - OFF
      description: Add or Remove Device
    DeviceResponse:
      type: object
      properties:
        deviceTrustedId:
          type: string
          description: device MAC
        deviceExternalId:
          type: string
          description: device external ID
        deviceTypeId:
          type: integer
          example: 802
        deviceName:
          type: string
        status:
          type: string
          enum:
          - ON
          - OFF
      description: Add or Remove Device
    UserVideoServiceInfo:
      type: object
      properties:
        creditLimit:
          type: integer
          example: 1000
        geographicArea:
          type: integer
          example: 1
        blackoutArea:
          type: integer
          example: 1
        timeZone:
          type: integer
        dvrEnabled:
          type: boolean
        sdMediaStreams:
          type: integer
        hdMediaStreams:
          type: integer
        dvbtTuners:
          type: integer
        serverCodeList:
          type: string
      description: Object containing User Video Services Information.
    UserVideoServiceInfoResponse:
        type: object
        allOf:
          - $ref: '#/components/schemas/UserVideoServiceInfo'
          - type: object
            properties:
              masterDeviceId:
                type: string
    ResultOK:
      type: object
      properties:
        uniqueId:
          type: string
          description: uniqueId in GVP / administrative Code in TdE
        userId:
          type: string
          description: internal Id in GVP platform, generated automatically during
            user creation
    Error:
      type: object
      properties:
        statusCode:
          type: integer
          description: |
            Numerical code identifying the specific error. 
        statusMessage:
          type: string
          description: Error description
        statusDetail:
          type: string
          description: Additional info of the Error response (only if needed)          
  responses:
    200-DeviceList:
      description: SUCCESS
      headers:
        X-Request-ID:
          description: Header request ID for tracking purpouses.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/DevicesListResponse'
    200-ProductList:
      description: SUCCESS
      headers:
        X-Request-ID:
          description: Header request ID for tracking purpouses.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/UserProductsResponse'
    200-Response:
      description: SUCCESS
      headers:
        X-Request-ID:
          description: Header request ID for tracking purpouses.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ResultOK'
    200-User:
      description: SUCCESS
      headers:
        X-Request-ID:
          description: Header request ID for tracking purpouses.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/UserResponse'
    204-Response:
      description: NO_CONTENT
      headers:
        X-Request-ID:
          description: Header request ID for tracking purpouses.
          schema:
            type: string
    400-Response:
      description: BAD_REQUEST or INVALID_ARGUMENT
      headers:
        X-Request-ID:
          description: Invalid request or Invalid_Argument
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    403-Response:
      description: PERMISSION_DENIED
      headers:
        X-Request-ID:
          description: Client does not have sufficient permission. 
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    404-Response:
      description: NOT_FOUND
      headers:
        X-Request-ID:
          description: A specified resource is not found, or the request is rejected by undisclosed reasons.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    409-Response:
      description: ALREADY_EXISTS
      headers:
        X-Request-ID:
          description: The resource that a client tried to create already exists.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    500-Response:
      description: INTERNAL_SERVER_ERROR
      headers:
        X-Request-ID:
          description: Unknown server error.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    501-Response:
      description: NOT_IMPLEMENTED
      headers:
        X-Request-ID:
          description: API method not implemented by the server.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    503-Response:
      description: UNAVAILABLE
      headers:
        X-Request-ID:
          description: Service unavailable.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    504-Response:
      description: TIMEOUT
      headers:
        X-Request-ID:
          description: Request timeout exceeded.
          schema:
            type: string
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    X-Request-ID:
      name: X-Request-ID
      in: header
      description: Header request ID for tracking purpouses
      schema:
        type: string
    instanceId:
      name: instanceId
      in: path
      description: Instance ID
      required: true
      schema:
        type: integer
        format: int32
    uniqueId:
      name: uniqueId
      in: path
      description: Unique ID
      required: true
      schema:
        type: integer
        format: int32
    status:
      name: status
      in: path
      required: true
      schema:
        type: string
        enum:
        - active
        - suspended
        - excluded
    action:
      name: action
      in: path
      description: 'Actions allowed during user transfer operation: start(N), cancelStart(NN),
        end(D), cancelEnd(ND)'
      required: true
      schema:
        type: string
        enum:
        - start
        - cancelStart
        - end
        - cancelEnd
    productType:
      name: productType
      in: query
      description: If present, will be used to filter, including only the products
        of this 'producType'
      schema:
        type: string
    productCode:
      name: productCode
      in: query
      description: Unique identifier of the product in operator's BSS/OSS systems
      schema:
        type: string
    purchaseId:
      name: purchaseId
      in: query
      description: Unique identifier of the purchase of the product by the User (Voucher,
        Subscription...)
      schema:
        type: string
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      name: X-API-Key
      in: header
